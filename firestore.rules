
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Aturan untuk data pengguna
    match /users/{userId} {
      // Pengguna dapat membaca dan menulis data mereka sendiri, tetapi tidak bisa menghapus akun mereka dari aturan ini.
      // Admin dapat membaca data pengguna mana pun.
      allow read: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == userId;
      // Aturan hapus sengaja dibiarkan kosong untuk mencegah penghapusan yang tidak disengaja.
      // Penghapusan harus ditangani oleh fungsi Cloud atau dari konsol Firebase.
      allow delete: if false;
    }

    // Aturan untuk pengaturan permainan
    match /game-settings/{setting} {
      // Semua pengguna yang terautentikasi dapat membaca pengaturan permainan.
      allow read: if request.auth != null;
      // Hanya admin yang dapat menulis/mengubah pengaturan permainan.
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Aturan untuk gelar
    match /titles/{titleId} {
        // Semua pengguna yang terautentikasi dapat membaca gelar
        allow read: if request.auth != null;
        // Hanya admin yang dapat membuat, mengubah, atau menghapus gelar
        allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Aturan untuk aliansi
    match /alliances/{allianceId} {
        // Semua pengguna yang terautentikasi dapat membaca data aliansi
        allow read: if request.auth != null;
        // Hanya admin yang bisa membuat/menghapus. Pemimpin bisa update.
        allow create, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        allow update: if request.auth != null; // Diperlonggar sementara
    }
    
    // Aturan untuk suara
    match /votes/{userId} {
        // Pengguna hanya bisa memberikan/mengubah suara mereka sendiri
        allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Aturan untuk laporan
    match /reports/{reportId} {
        // Pengguna hanya bisa membaca laporan yang melibatkan mereka
        allow read, update: if request.auth != null && request.auth.uid in resource.data.involvedUsers;
        allow create: if request.auth != null;
    }

    // Aturan untuk antrian (konstruksi, pelatihan, serangan)
    match /{queue}/{jobId} {
        allow read, create, delete: if request.auth != null;
        // Aturan yang lebih spesifik bisa ditambahkan jika diperlukan,
        // misalnya: allow create: if request.auth.uid == request.resource.data.userId;
    }

    // Aturan untuk log aktivitas
    match /activityLog/{logId} {
        // Log hanya bisa dibuat
        allow create: if request.auth != null;
        allow read, write, delete: if false; // Tidak ada yang bisa membaca/mengubah log setelah dibuat
    }

  }
}
