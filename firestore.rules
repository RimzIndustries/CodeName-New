rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isSignedIn() && request.auth.token.admin == true;
    }

    //----------------------------------------------------------------------
    //  Public Game Data
    //  Collections that all signed-in users need to be able to read
    //  but only admins can write.
    //----------------------------------------------------------------------
    match /game-settings/{docId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    match /titles/{docId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    match /alliances/{docId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    //----------------------------------------------------------------------
    //  User Data
    //  Users can read all profiles (for rankings, etc.) but can only
    //  write to their own document. Admins have full write access.
    //----------------------------------------------------------------------
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isOwner(userId) || isAdmin();
    }
    
    //----------------------------------------------------------------------
    //  Game Mechanics Collections
    //  These have more specific rules.
    //----------------------------------------------------------------------

    // Votes: Any signed-in user can cast/update their own vote.
    match /votes/{userId} {
       allow read, write: if isOwner(userId);
    }
    
    // Reports: Users can only access reports where their UID is involved.
    match /reports/{reportId} {
        allow read, write: if isSignedIn() && request.auth.uid in resource.data.involvedUsers;
    }
    
    // Wars: Only admins can create or end wars. Everyone can read.
    match /wars/{warId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }
    
    // Activity Log: Users can only create new log entries. No reads or updates.
    match /activityLog/{logId} {
        allow read, update, delete: if false;
        allow create: if isSignedIn();
    }

    //----------------------------------------------------------------------
    //  Queue Collections
    //  Users can only create and read their own queue items.
    //----------------------------------------------------------------------
    match /constructionQueue/{jobId} {
        allow read, write: if isSignedIn() && request.resource.data.userId == request.auth.uid;
    }
    
    match /trainingQueue/{jobId} {
        allow read, write: if isSignedIn() && request.resource.data.userId == request.auth.uid;
    }

    match /attackQueue/{jobId} {
        allow read, write: if isSignedIn() && request.resource.data.attackerId == request.auth.uid;
    }
    
    match /returnQueue/{jobId} {
        allow read, write: if isSignedIn() && request.resource.data.userId == request.auth.uid;
    }
    
    match /transportQueue/{jobId} {
        allow read, write: if isSignedIn() && (request.resource.data.senderId == request.auth.uid || request.resource.data.recipientId == request.auth.uid);
    }
  }
}
