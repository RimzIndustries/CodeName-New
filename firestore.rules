rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions to make rules more readable.
    function isAuth() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuth() && request.auth.token.admin == true;
    }
    
    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }

    // GAME-SETTINGS: Publicly readable by authenticated users, writable only by admins.
    // This allows the client to fetch all game rules at once.
    match /game-settings/{docId} {
      allow read: if isAuth();
      allow write: if isAdmin();
    }

    // USERS: Users can read/write their own data. Other authenticated users can only read.
    match /users/{userId} {
      allow read: if isAuth();
      allow write: if isOwner(userId);
    }
    
    // TITLES: Publicly readable, writable only by admins.
    match /titles/{titleId} {
        allow read: if isAuth();
        allow write: if isAdmin();
    }
    
    // ALLIANCES: Publicly readable, writable only by admins (for creation/deletion).
    // Updates to things like name/tag can be done by leaders (covered by functions in app).
    match /alliances/{allianceId} {
        allow read: if isAuth();
        allow write: if isAdmin(); 
    }
    
    // WARS: Readable by authenticated users, writable only by admins (for forced resolution).
    match /wars/{warId} {
        allow read: if isAuth();
        allow write: if isAdmin();
    }

    // VOTES: Users can only vote for their own alliance.
    match /votes/{userId} {
        allow read: if isAuth();
        allow write: if isOwner(userId);
    }
    
    // REPORTS: Users can only read reports they are involved in. Reports are created by server-side logic.
    match /reports/{reportId} {
        allow read: if isAuth() && resource.data.involvedUsers.hasAny([request.auth.uid]);
        allow create: if isAuth(); // Allow user-triggered actions to create reports
        allow update: if isAuth(); // To allow marking as read
        allow delete: if false; // Reports should not be deleted by users
    }
    
    // ACTIVITY LOG: Write-only for authenticated users.
    match /activityLog/{logId} {
        allow read: if false;
        allow write: if isAuth();
    }

    // QUEUES: Users can only create tasks for themselves.
    match /constructionQueue/{jobId} {
        allow read, write: if isAuth() && (isOwner(request.resource.data.userId) || isOwner(resource.data.userId));
    }
    match /trainingQueue/{jobId} {
        allow read, write: if isAuth() && (isOwner(request.resource.data.userId) || isOwner(resource.data.userId));
    }
    match /attackQueue/{jobId} {
        allow read, write: if isAuth() && (isOwner(request.resource.data.attackerId) || isOwner(resource.data.attackerId));
    }
    match /transportQueue/{jobId} {
        allow read, write: if isAuth() && (isOwner(request.resource.data.senderId) || isOwner(resource.data.senderId) || isOwner(resource.data.recipientId));
    }

  }
}
