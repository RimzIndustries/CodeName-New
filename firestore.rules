rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can only read and write to their own document.
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }

    // Game settings are public and readable by any authenticated user.
    // Only admins should be able to write to them (not yet implemented).
    match /game-settings/{setting} {
        allow read: if request.auth != null;
        allow write: if false; // Protect settings from client-side writes for now
    }

    // Allow authenticated users to read and create activity logs
    match /activityLog/{logId} {
      allow read, create: if request.auth != null;
    }

    // Allow authenticated users to read and create votes
    match /votes/{userId} {
      allow read, write, create, delete: if request.auth.uid == userId;
    }

    // Alliances can be read by any authenticated user.
    // Writes should be handled by server-side logic or specific rules (TBD).
    match /alliances/{allianceId} {
        allow read: if request.auth != null;
        allow write: if false; // Protect for now
    }

    // Titles are public and readable by any authenticated user.
    match /titles/{titleId} {
        allow read: if request.auth != null;
        allow write: if false; // Protect for now
    }

    // Queues: users can only manage their own jobs.
    match /constructionQueue/{jobId} {
      allow read, create, delete: if request.auth.uid == request.resource.data.userId;
    }
     match /trainingQueue/{jobId} {
      allow read, create, delete: if request.auth.uid == request.resource.data.userId;
    }
     match /attackQueue/{jobId} {
      allow read, create, delete: if request.auth.uid == request.resource.data.attackerId;
    }
     match /returnQueue/{jobId} {
      allow read, create, delete: if request.auth.uid == request.resource.data.userId;
    }
     match /transportQueue/{jobId} {
      allow read, create, delete: if request.auth.uid == request.resource.data.senderId || request.auth.uid == request.resource.data.recipientId;
    }

    // Reports: users can only read reports they are involved in.
    match /reports/{reportId} {
        allow read, update: if request.auth.uid in resource.data.involvedUsers;
    }
    
    // Wars can be read by any authenticated user.
    match /wars/{warId} {
      allow read: if request.auth != null;
      allow write: if false; // Protect for now
    }
  }
}
