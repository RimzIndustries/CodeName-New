
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read and write to their own document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Authenticated users can read the game settings, but not write to them.
    match /game-settings/{docId} {
      allow read: if request.auth != null;
      allow write: if false; // Nobody can write from the client
    }
    
    // Other collections can be added here
    match /titles/{titleId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /alliances/{allianceId} {
      allow read, write: if request.auth != null;
    }

    match /votes/{userId} {
       allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /reports/{reportId} {
      allow read: if request.auth != null && request.auth.uid in resource.data.involvedUsers;
      allow create: if request.auth != null;
    }

    match /attackQueue/{jobId} {
      allow read, write: if request.auth != null && request.auth.uid == request.resource.data.attackerId;
    }

    match /constructionQueue/{jobId} {
       allow read, write: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    match /trainingQueue/{jobId} {
       allow read, write: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    match /returnQueue/{jobId} {
      allow read, write: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    match /transportQueue/{jobId} {
      allow read, write: if request.auth != null;
    }

    match /activityLog/{logId} {
      allow read, create: if request.auth != null;
    }

  }
}
