
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Pengguna hanya dapat membaca, memperbarui, dan menghapus dokumen mereka sendiri.
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      // Pembuatan pengguna ditangani melalui logika sisi server/klien saat pendaftaran.
      allow create: if request.auth != null;
    }

    // Pengaturan permainan dapat dibaca oleh semua pengguna yang terautentikasi.
    // Hanya admin (dalam logika masa depan) yang dapat menulis. Untuk saat ini, penulisan dinonaktifkan dari sisi klien.
    match /game-settings/{docId} {
      allow read: if request.auth != null;
      allow write: if false; // Lindungi dari penulisan sisi klien
    }

    // Izinkan admin untuk membaca semua data pengguna untuk dashboard admin
    match /users/{userId} {
      allow get: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow list: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Aturan untuk koleksi lain dapat ditambahkan di sini.
    // Contoh:
    match /activityLog/{logId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
    }

    match /alliances/{allianceId} {
       allow read, write: if request.auth != null;
    }

    match /attackQueue/{jobId} {
        allow read, write, delete: if request.auth != null && request.resource.data.attackerId == request.auth.uid;
    }

    match /constructionQueue/{jobId} {
       allow read, write, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    match /reports/{reportId} {
      allow read, write: if request.auth != null && request.auth.uid in resource.data.involvedUsers;
    }

    match /returnQueue/{jobId} {
       allow read, write, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    match /titles/{titleId} {
        allow read: if request.auth != null;
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /trainingQueue/{jobId} {
        allow read, write, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    match /transportQueue/{jobId} {
        allow read, write, delete: if request.auth != null;
    }
    
    match /votes/{userId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /wars/{warId} {
        allow read, write, delete: if request.auth != null;
    }

  }
}
