rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // =================================
    // Helper Functions
    // =================================
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function isAdmin() {
      return isUserAuthenticated() && getUserData(request.auth.uid).role == 'admin';
    }

    // =================================
    // Collection Rules
    // =================================

    // --- Users Collection ---
    // Users can read and write to their own document. Admins can read/write any user document.
    match /users/{userId} {
      allow read, write: if isOwner(userId) || isAdmin();
    }

    // --- Game Settings Collection ---
    // All authenticated users need to read these settings. Only admins can change them.
    match /game-settings/{docId} {
      allow get, list: if isUserAuthenticated();
      allow write: if isAdmin();
    }

    // --- Titles Collection ---
    // All authenticated users can read titles. Only admins can change them.
    match /titles/{titleId} {
      allow get, list: if isUserAuthenticated();
      allow write: if isAdmin();
    }

    // --- Alliances Collection ---
    // All authenticated users can read alliance info.
    // Writes are managed by admins or through specific logic (e.g., leaders).
    match /alliances/{allianceId} {
      allow get, list: if isUserAuthenticated();
      allow write: if isAdmin(); // Leaders can modify via backend logic, not direct client writes
    }
    
    // --- Votes Collection ---
    // Users can only create/update their own vote.
    match /votes/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // --- Reports Collection ---
    // Users can only read reports where their UID is in the 'involvedUsers' array.
    match /reports/{reportId} {
      allow read: if isUserAuthenticated() && request.auth.uid in resource.data.involvedUsers;
      // Reports are created by the system (backend/cloud function), not clients.
      allow write: if false; 
    }

    // --- Queue Collections (Construction, Training, Attack, Return, Transport) ---
    // Users can only create items for themselves. Reading/deleting is handled by backend processes.
    match /{queueName}/{jobId}
    where queueName in ['constructionQueue', 'trainingQueue', 'attackQueue', 'returnQueue', 'transportQueue', 'activityLog'] {
        allow read: if isUserAuthenticated() && resource.data.userId == request.auth.uid;
        allow create: if isUserAuthenticated() && request.resource.data.userId == request.auth.uid;
        allow delete: if false; // Only backend can delete queue items
        allow update: if false;
    }
    
    // --- Wars Collection ---
    // Readable by anyone authenticated. Only admins or backend logic can create/delete.
    match /wars/{warId} {
      allow get, list: if isUserAuthenticated();
      allow write: if isAdmin();
    }
  }
}
