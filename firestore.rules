rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if a user belongs to a specific alliance
    function isUserInAlliance(allianceId) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.allianceId == allianceId;
    }

    // Game settings are readable by any authenticated user, writable only by admins.
    match /game-settings/{docId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // Users can only read/write their own document, but admins can access any.
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || isAdmin();
    }

    // Titles are readable by any authenticated user, writable only by admins.
    match /titles/{titleId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // Alliances are readable by any authenticated user. Creation/deletion by admin.
    // Updates can be done by admin or the designated leader.
    match /alliances/{allianceId} {
        allow read: if request.auth != null;
        allow create, delete: if isAdmin();
        allow update: if isAdmin() || (resource.data.leaderId == request.auth.uid);
    }

    // Votes can be read or written by a user if they are in the alliance being voted for.
    match /votes/{userId} {
        // The userId here is the voter's ID.
        allow read, write: if request.auth.uid == userId && isUserInAlliance(resource.data.allianceId);
    }
    
    // Reports can only be accessed by users involved in the report.
    match /reports/{reportId} {
        allow read, write: if request.auth.uid in resource.data.involvedUsers;
    }

    // Queues (construction, training, attack, etc.) can only be accessed by the user who owns them.
    match /constructionQueue/{jobId} {
      allow read, write, delete: if request.auth.uid == resource.data.userId || isAdmin();
    }
    match /trainingQueue/{jobId} {
      allow read, write, delete: if request.auth.uid == resource.data.userId || isAdmin();
    }
    match /attackQueue/{jobId} {
        allow read, write, delete: if request.auth.uid == resource.data.attackerId || isAdmin();
    }
    match /returnQueue/{jobId} {
        allow read, write, delete: if request.auth.uid == resource.data.userId || isAdmin();
    }
    match /transportQueue/{jobId} {
        allow read, write, delete: if request.auth.uid == resource.data.senderId || request.auth.uid == resource.data.recipientId || isAdmin();
    }

    // Activity log is write-only for authenticated users. No one can read it directly.
    match /activityLog/{logId} {
        allow read: if false;
        allow write: if request.auth != null;
    }
    
    // Wars can be read by anyone, but only created/deleted by admins.
    match /wars/{warId} {
        allow read: if request.auth != null;
        allow create, delete: if isAdmin();
    }
  }
}
